// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int                  @id @default(autoincrement())
  username  String               @unique
  password  String
  playlists Playlist?
  podcasts  Podcast[]
  episodes  UserListensEpisode[]
}

model Podcast {
  id              Int      @id @default(autoincrement())
  author          String
  email           String
  name            String
  summary         String?
  link            String
  category        String
  image           String
  language        String
  isExplicit      Boolean  @map("is_explicit")
  lastPublishedAt DateTime @map("last_published_at")
  users           User[]
}

model Episode {
  id          Int                  @id @default(autoincrement())
  title       String
  summary     String?
  description String?
  duration    String
  image       String?
  publishedAt DateTime             @map("published_at")
  link        String
  playlists   Playlist[]
  users       UserListensEpisode[]
}

model Playlist {
  id       Int       @id @default(autoincrement())
  userId   Int       @unique @map("user_id")
  name     String
  users    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  episodes Episode[]
}

model UserListensEpisode {
  userId       Int     @map("user_id")
  user         User    @relation(fields: [userId], references: [id])
  episodeId    Int     @map("episode_id")
  episode      Episode @relation(fields: [episodeId], references: [id])
  pausedAt     Int     @default(0) @map("paused_at")
  complete     Boolean @default(false)
  isDownloaded Boolean @default(false) @map("is_downloaded")

  @@unique([userId, episodeId])
  @@map("user_listens_episode")
}
